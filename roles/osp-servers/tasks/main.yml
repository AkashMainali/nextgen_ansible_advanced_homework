---
- name: Create server instances
  os_server:
    cloud:            "{{ openstack_cloud                           | default('openstack') }}"
    name:             "{{ __openstack_server.name }}"
    state:            "{{ openstack_server_state                    | default(__openstack_server.state) | default('present') }}"
    image:            "{{ __openstack_server.image                  | default('rhel-7.6') }}"
    flavor:           "{{ __openstack_server.flavor                 | default('m2.medium') }}"
    key_name:         "{{ __openstack_server.key_name               | default('ansible_ssh_key') }}"
    wait:             "{{ __openstack_server.wait                   | default('yes') }}"
    security_groups:  "{{ __openstack_server.security_group_name }}"
    delete_fip:       true
    meta: "group={{ __openstack_server.group }},deployment_name={{ __openstack_server.deployment }}"
    nics:
      - net-name: int_network
      #    - net-name: ext_network
    userdata: |
      #!/bin/bash
      # curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      # cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      cat ~/.ssh/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
  loop: "{{ openstack_servers }}"      
  loop_control:
    loop_var: __openstack_server
  async: 900
  poll: 0
  register: r_instances

- name: Sleep to allow tower projects to update
  pause:
   seconds: 60

- name: Add floating IP to instances
  os_floating_ip:
    cloud: openstack
    state: present
    reuse: yes
    server: "{{ __instance.__openstack_server.name }}"
    network: ext_network
    wait: true
    timeout: 180
  loop: "{{ r_instances.results }}"
  loop_control:
    loop_var: __instance
  register: r_floating_ips

